apiVersion: v1
kind: Pod
metadata:
  name: backend
  labels:
    app: backend
  annotations:
    os.name: linux
spec:
  # Downward API
  initContainers:
    - name: init-container
      image: busybox
      restartPolicy: Always
      env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
      command: ['sh', '-c', 'printenv']
  containers:
    - name: backend
      image: nodejs
      imagePullPolicy: IfNotPresent
      ports:
        - containerPort: 3000
      resources:
        limits:
          memory: "500Mi"
          cpu: "1"
        requests:
          memory: "500Mi"
          cpu: "1"
      livenessProbe:
        exec:
          command:
            - /bin/sh
            - -c
            - echo "Liveness Probe"
        initialDelaySeconds: 15
        periodSeconds: 10
      readinessProbe:
        httpGet:
          path: /
          port: 3000
        initialDelaySeconds: 5
        periodSeconds: 10
      startupProbe:
        tcpSocket:
          port: 3000
        initialDelaySeconds: 15
        periodSeconds: 5
        timeoutSeconds: 3
        failureThreshold: 3
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: backend-pdb
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: backend
status:
  currentHealthy: 1
  desiredHealthy: 1
  disruptionsAllowed: 1
  expectedPods: 2
  observedGeneration: 1